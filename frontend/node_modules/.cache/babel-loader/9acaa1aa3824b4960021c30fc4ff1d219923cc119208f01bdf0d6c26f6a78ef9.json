{"ast":null,"code":"var _jsxFileName = \"/home/azureuser/code/grv_project/src/components/Sidebar.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/SideBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  isSidebarOpen,\n  userRole\n}) => {\n  // Initialize menuItems as an empty array\n  let menuItems = [];\n\n  // Define menu items based on user role\n  if (userRole === 'Student') {\n    menuItems = [{\n      path: '/student/dashboard',\n      label: 'Dashboard'\n    }, {\n      path: '/student/my-grievances',\n      label: 'My Grievances'\n    }, {\n      path: '/student/resources',\n      label: 'Resources'\n    }, {\n      path: '/student/profile',\n      label: 'Profile'\n    }, {\n      path: '/student/announcements',\n      label: 'Announcements'\n    }, {\n      path: '/student/settings',\n      label: 'Settings'\n    }, {\n      path: '/student/activities',\n      label: 'Student Activities'\n    }, {\n      path: '/student/support',\n      label: 'Support'\n    }];\n  } else if (userRole === 'Staff') {\n    menuItems = [{\n      path: '/staff/dashboard',\n      label: 'Dashboard'\n    }, {\n      path: '/staff/assigned-grievances',\n      label: 'Assigned Grievances'\n    }, {\n      path: '/staff/manage-profile',\n      label: 'Manage Profile'\n    }, {\n      path: '/staff/resources',\n      label: 'Resources'\n    }, {\n      path: '/staff/announcements',\n      label: 'Announcements'\n    }, {\n      path: '/staff/settings',\n      label: 'Settings'\n    }, {\n      path: '/staff/support',\n      label: 'Support'\n    }];\n  } else if (userRole === 'Admin') {\n    menuItems = [{\n      path: '/admin/dashboard',\n      label: 'Dashboard'\n    }, {\n      path: '/admin/manage-staff',\n      label: 'Manage Staff'\n    }, {\n      path: '/admin/manage-students',\n      label: 'Manage Students'\n    }, {\n      path: '/admin/reports',\n      label: 'Reports'\n    }, {\n      path: '/admin/resources',\n      label: 'Resources'\n    }, {\n      path: '/admin/announcements',\n      label: 'Announcements'\n    }, {\n      path: '/admin/settings',\n      label: 'Settings'\n    }, {\n      path: '/admin/support',\n      label: 'Support'\n    }];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isSidebarOpen ? 'open' : 'collapsed'}`,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: item.path,\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Sidebar","isSidebarOpen","userRole","menuItems","path","label","className","children","map","item","index","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/azureuser/code/grv_project/src/components/Sidebar.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/SideBar.css';\r\n\r\nconst Sidebar = ({ isSidebarOpen, userRole }) => {\r\n  // Initialize menuItems as an empty array\r\n  let menuItems = [];\r\n\r\n  // Define menu items based on user role\r\n  if (userRole === 'Student') {\r\n    menuItems = [\r\n      { path: '/student/dashboard', label: 'Dashboard' },\r\n      { path: '/student/my-grievances', label: 'My Grievances' },\r\n      { path: '/student/resources', label: 'Resources' },\r\n      { path: '/student/profile', label: 'Profile' },\r\n      { path: '/student/announcements', label: 'Announcements' },\r\n      { path: '/student/settings', label: 'Settings' },\r\n      { path: '/student/activities', label: 'Student Activities' },\r\n      { path: '/student/support', label: 'Support' },\r\n    ];\r\n  } else if (userRole === 'Staff') {\r\n    menuItems = [\r\n      { path: '/staff/dashboard', label: 'Dashboard' },\r\n      { path: '/staff/assigned-grievances', label: 'Assigned Grievances' },\r\n      { path: '/staff/manage-profile', label: 'Manage Profile' },\r\n      { path: '/staff/resources', label: 'Resources' },\r\n      { path: '/staff/announcements', label: 'Announcements' },\r\n      { path: '/staff/settings', label: 'Settings' },\r\n      { path: '/staff/support', label: 'Support' },\r\n    ];\r\n  } else if (userRole === 'Admin') {\r\n    menuItems = [\r\n      { path: '/admin/dashboard', label: 'Dashboard' },\r\n      { path: '/admin/manage-staff', label: 'Manage Staff' },\r\n      { path: '/admin/manage-students', label: 'Manage Students' },\r\n      { path: '/admin/reports', label: 'Reports' },\r\n      { path: '/admin/resources', label: 'Resources' },\r\n      { path: '/admin/announcements', label: 'Announcements' },\r\n      { path: '/admin/settings', label: 'Settings' },\r\n      { path: '/admin/support', label: 'Support' },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className={`sidebar ${isSidebarOpen ? 'open' : 'collapsed'}`}>\r\n      <ul>\r\n        {menuItems.map((item, index) => (\r\n          <li key={index}>\r\n            <Link to={item.path}>{item.label}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}